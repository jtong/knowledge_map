graph design_pattern_knowlege_map {
  node [fontname="Verdana", fontsize= 28, size="30,30"];
  compound=true; 
  subgraph cluster_oo{
    类,实例,方法,继承,接口,抽象类,包,覆盖,重载,构造,初始化;
    方法 -- 类方法,实例方法, 抽象方法, 接口方法; 
    继承 -- 类, 接口, 抽象类;
    接口 -- 接口方法;
    抽象类 -- 抽象方法;
    实例 -- 组合;
    类 -- 类方法;
    构造 -- 初始化 -- 实例;
    类 -- 构造 -- 实例;
    实例 -- 实例方法;
    接口方法, 抽象方法 -- 实例方法;
    label = "面向对象编程概念";
  }
  面向对象编程 -- 继承[lhead=cluster_oo];
  面向对象编程 -- OO设计模式;
  OO设计模式 -- 创建类型模式 -- 抽象工厂, 工厂方法,工厂模式,懒加载模式,构造模式,对象池模式,原型模式,单例模式,多例模式,初始化时获取所有资源;
  OO设计模式 -- 构造器模式 -- 适配器模式, 桥接模式,组合模式, 修饰模式,外观模式,享元模式,代理模式;
  OO设计模式 -- 行为型模式 -- 黑板 -- "严格说来,黑板不属于设计模式,应该是架构模式"
  行为型模式 -- 责任链,命令模式, 解释器模式, 迭代器模式, 中介者模式, 备忘录模式, 空对象模式, 观察者模式, 状态模式, 模版方法, 访问者模式;
  并发型模式 -- 主动对象, 阻碍, 双重检查锁定, 守卫, "领导者/追随者", 检测对象模式, 读写锁, 调度, 线程池, 线程待定存储, 反应器; 
} 